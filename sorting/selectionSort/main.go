package main

import "fmt"

func selectionSort(arr []int) {
    n := len(arr)

    // Внешний цикл, который проходит по всем элементам массива
    for i := 0; i < n-1; i++ {
        minIndex := i // Предполагаем, что текущий элемент - минимальный

        // Внутренний цикл для поиска минимального элемента в неотсортированной части массива
        for j := i + 1; j < n; j++ {
			
            // Если найден элемент меньше, обновляем индекс минимального элемента
            if arr[j] < arr[minIndex] {
                minIndex = j // Обновляем индекс минимального элемента
            }
        }

        // Обмен местами текущего элемента с найденным минимальным элементом
		arr[i], arr[minIndex] = arr[minIndex], arr[i]
    }
}

// Основная функция, в которой выполняется программа
func main() {
    arr := []int{64, 25, 12, 22, 11}
    fmt.Println("Неотсортированный массив:", arr)

    selectionSort(arr) // Вызываем функцию сортировки

    fmt.Println("Отсортированный массив:", arr)
}